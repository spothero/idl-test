/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package fortune;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.12.0)", date = "2019-10-15")
public class FortuneRequest implements org.apache.thrift.TBase<FortuneRequest, FortuneRequest._Fields>, java.io.Serializable, Cloneable, Comparable<FortuneRequest> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("FortuneRequest");

  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField OPTIONAL_CAR_FIELD_DESC = new org.apache.thrift.protocol.TField("optional_car", org.apache.thrift.protocol.TType.STRUCT, (short)2);
  private static final org.apache.thrift.protocol.TField VEHICLE_DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("vehicle_description", org.apache.thrift.protocol.TType.STRUCT, (short)3);
  private static final org.apache.thrift.protocol.TField FINGER_LENGTHS_FIELD_DESC = new org.apache.thrift.protocol.TField("finger_lengths", org.apache.thrift.protocol.TType.LIST, (short)4);
  private static final org.apache.thrift.protocol.TField SIBLING_AGES_FIELD_DESC = new org.apache.thrift.protocol.TField("sibling_ages", org.apache.thrift.protocol.TType.MAP, (short)5);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new FortuneRequestStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new FortuneRequestTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable java.lang.String name; // required
  public @org.apache.thrift.annotation.Nullable Car optional_car; // optional
  public @org.apache.thrift.annotation.Nullable VehicleDescription vehicle_description; // required
  public @org.apache.thrift.annotation.Nullable java.util.List<java.lang.Integer> finger_lengths; // required
  public @org.apache.thrift.annotation.Nullable java.util.Map<java.lang.String,java.lang.Integer> sibling_ages; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    NAME((short)1, "name"),
    OPTIONAL_CAR((short)2, "optional_car"),
    VEHICLE_DESCRIPTION((short)3, "vehicle_description"),
    FINGER_LENGTHS((short)4, "finger_lengths"),
    SIBLING_AGES((short)5, "sibling_ages");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // NAME
          return NAME;
        case 2: // OPTIONAL_CAR
          return OPTIONAL_CAR;
        case 3: // VEHICLE_DESCRIPTION
          return VEHICLE_DESCRIPTION;
        case 4: // FINGER_LENGTHS
          return FINGER_LENGTHS;
        case 5: // SIBLING_AGES
          return SIBLING_AGES;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final _Fields optionals[] = {_Fields.OPTIONAL_CAR};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OPTIONAL_CAR, new org.apache.thrift.meta_data.FieldMetaData("optional_car", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT        , "Car")));
    tmpMap.put(_Fields.VEHICLE_DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("vehicle_description", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT        , "VehicleDescription")));
    tmpMap.put(_Fields.FINGER_LENGTHS, new org.apache.thrift.meta_data.FieldMetaData("finger_lengths", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    tmpMap.put(_Fields.SIBLING_AGES, new org.apache.thrift.meta_data.FieldMetaData("sibling_ages", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(FortuneRequest.class, metaDataMap);
  }

  public FortuneRequest() {
  }

  public FortuneRequest(
    java.lang.String name,
    VehicleDescription vehicle_description,
    java.util.List<java.lang.Integer> finger_lengths,
    java.util.Map<java.lang.String,java.lang.Integer> sibling_ages)
  {
    this();
    this.name = name;
    this.vehicle_description = vehicle_description;
    this.finger_lengths = finger_lengths;
    this.sibling_ages = sibling_ages;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public FortuneRequest(FortuneRequest other) {
    if (other.isSetName()) {
      this.name = other.name;
    }
    if (other.isSetOptional_car()) {
      this.optional_car = new Car(other.optional_car);
    }
    if (other.isSetVehicle_description()) {
      this.vehicle_description = new VehicleDescription(other.vehicle_description);
    }
    if (other.isSetFinger_lengths()) {
      java.util.List<java.lang.Integer> __this__finger_lengths = new java.util.ArrayList<java.lang.Integer>(other.finger_lengths);
      this.finger_lengths = __this__finger_lengths;
    }
    if (other.isSetSibling_ages()) {
      java.util.Map<java.lang.String,java.lang.Integer> __this__sibling_ages = new java.util.HashMap<java.lang.String,java.lang.Integer>(other.sibling_ages);
      this.sibling_ages = __this__sibling_ages;
    }
  }

  public FortuneRequest deepCopy() {
    return new FortuneRequest(this);
  }

  @Override
  public void clear() {
    this.name = null;
    this.optional_car = null;
    this.vehicle_description = null;
    this.finger_lengths = null;
    this.sibling_ages = null;
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getName() {
    return this.name;
  }

  public FortuneRequest setName(@org.apache.thrift.annotation.Nullable java.lang.String name) {
    this.name = name;
    return this;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public Car getOptional_car() {
    return this.optional_car;
  }

  public FortuneRequest setOptional_car(@org.apache.thrift.annotation.Nullable Car optional_car) {
    this.optional_car = optional_car;
    return this;
  }

  public void unsetOptional_car() {
    this.optional_car = null;
  }

  /** Returns true if field optional_car is set (has been assigned a value) and false otherwise */
  public boolean isSetOptional_car() {
    return this.optional_car != null;
  }

  public void setOptional_carIsSet(boolean value) {
    if (!value) {
      this.optional_car = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public VehicleDescription getVehicle_description() {
    return this.vehicle_description;
  }

  public FortuneRequest setVehicle_description(@org.apache.thrift.annotation.Nullable VehicleDescription vehicle_description) {
    this.vehicle_description = vehicle_description;
    return this;
  }

  public void unsetVehicle_description() {
    this.vehicle_description = null;
  }

  /** Returns true if field vehicle_description is set (has been assigned a value) and false otherwise */
  public boolean isSetVehicle_description() {
    return this.vehicle_description != null;
  }

  public void setVehicle_descriptionIsSet(boolean value) {
    if (!value) {
      this.vehicle_description = null;
    }
  }

  public int getFinger_lengthsSize() {
    return (this.finger_lengths == null) ? 0 : this.finger_lengths.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<java.lang.Integer> getFinger_lengthsIterator() {
    return (this.finger_lengths == null) ? null : this.finger_lengths.iterator();
  }

  public void addToFinger_lengths(int elem) {
    if (this.finger_lengths == null) {
      this.finger_lengths = new java.util.ArrayList<java.lang.Integer>();
    }
    this.finger_lengths.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<java.lang.Integer> getFinger_lengths() {
    return this.finger_lengths;
  }

  public FortuneRequest setFinger_lengths(@org.apache.thrift.annotation.Nullable java.util.List<java.lang.Integer> finger_lengths) {
    this.finger_lengths = finger_lengths;
    return this;
  }

  public void unsetFinger_lengths() {
    this.finger_lengths = null;
  }

  /** Returns true if field finger_lengths is set (has been assigned a value) and false otherwise */
  public boolean isSetFinger_lengths() {
    return this.finger_lengths != null;
  }

  public void setFinger_lengthsIsSet(boolean value) {
    if (!value) {
      this.finger_lengths = null;
    }
  }

  public int getSibling_agesSize() {
    return (this.sibling_ages == null) ? 0 : this.sibling_ages.size();
  }

  public void putToSibling_ages(java.lang.String key, int val) {
    if (this.sibling_ages == null) {
      this.sibling_ages = new java.util.HashMap<java.lang.String,java.lang.Integer>();
    }
    this.sibling_ages.put(key, val);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Map<java.lang.String,java.lang.Integer> getSibling_ages() {
    return this.sibling_ages;
  }

  public FortuneRequest setSibling_ages(@org.apache.thrift.annotation.Nullable java.util.Map<java.lang.String,java.lang.Integer> sibling_ages) {
    this.sibling_ages = sibling_ages;
    return this;
  }

  public void unsetSibling_ages() {
    this.sibling_ages = null;
  }

  /** Returns true if field sibling_ages is set (has been assigned a value) and false otherwise */
  public boolean isSetSibling_ages() {
    return this.sibling_ages != null;
  }

  public void setSibling_agesIsSet(boolean value) {
    if (!value) {
      this.sibling_ages = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((java.lang.String)value);
      }
      break;

    case OPTIONAL_CAR:
      if (value == null) {
        unsetOptional_car();
      } else {
        setOptional_car((Car)value);
      }
      break;

    case VEHICLE_DESCRIPTION:
      if (value == null) {
        unsetVehicle_description();
      } else {
        setVehicle_description((VehicleDescription)value);
      }
      break;

    case FINGER_LENGTHS:
      if (value == null) {
        unsetFinger_lengths();
      } else {
        setFinger_lengths((java.util.List<java.lang.Integer>)value);
      }
      break;

    case SIBLING_AGES:
      if (value == null) {
        unsetSibling_ages();
      } else {
        setSibling_ages((java.util.Map<java.lang.String,java.lang.Integer>)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case NAME:
      return getName();

    case OPTIONAL_CAR:
      return getOptional_car();

    case VEHICLE_DESCRIPTION:
      return getVehicle_description();

    case FINGER_LENGTHS:
      return getFinger_lengths();

    case SIBLING_AGES:
      return getSibling_ages();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case NAME:
      return isSetName();
    case OPTIONAL_CAR:
      return isSetOptional_car();
    case VEHICLE_DESCRIPTION:
      return isSetVehicle_description();
    case FINGER_LENGTHS:
      return isSetFinger_lengths();
    case SIBLING_AGES:
      return isSetSibling_ages();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof FortuneRequest)
      return this.equals((FortuneRequest)that);
    return false;
  }

  public boolean equals(FortuneRequest that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_optional_car = true && this.isSetOptional_car();
    boolean that_present_optional_car = true && that.isSetOptional_car();
    if (this_present_optional_car || that_present_optional_car) {
      if (!(this_present_optional_car && that_present_optional_car))
        return false;
      if (!this.optional_car.equals(that.optional_car))
        return false;
    }

    boolean this_present_vehicle_description = true && this.isSetVehicle_description();
    boolean that_present_vehicle_description = true && that.isSetVehicle_description();
    if (this_present_vehicle_description || that_present_vehicle_description) {
      if (!(this_present_vehicle_description && that_present_vehicle_description))
        return false;
      if (!this.vehicle_description.equals(that.vehicle_description))
        return false;
    }

    boolean this_present_finger_lengths = true && this.isSetFinger_lengths();
    boolean that_present_finger_lengths = true && that.isSetFinger_lengths();
    if (this_present_finger_lengths || that_present_finger_lengths) {
      if (!(this_present_finger_lengths && that_present_finger_lengths))
        return false;
      if (!this.finger_lengths.equals(that.finger_lengths))
        return false;
    }

    boolean this_present_sibling_ages = true && this.isSetSibling_ages();
    boolean that_present_sibling_ages = true && that.isSetSibling_ages();
    if (this_present_sibling_ages || that_present_sibling_ages) {
      if (!(this_present_sibling_ages && that_present_sibling_ages))
        return false;
      if (!this.sibling_ages.equals(that.sibling_ages))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetName()) ? 131071 : 524287);
    if (isSetName())
      hashCode = hashCode * 8191 + name.hashCode();

    hashCode = hashCode * 8191 + ((isSetOptional_car()) ? 131071 : 524287);
    if (isSetOptional_car())
      hashCode = hashCode * 8191 + optional_car.hashCode();

    hashCode = hashCode * 8191 + ((isSetVehicle_description()) ? 131071 : 524287);
    if (isSetVehicle_description())
      hashCode = hashCode * 8191 + vehicle_description.hashCode();

    hashCode = hashCode * 8191 + ((isSetFinger_lengths()) ? 131071 : 524287);
    if (isSetFinger_lengths())
      hashCode = hashCode * 8191 + finger_lengths.hashCode();

    hashCode = hashCode * 8191 + ((isSetSibling_ages()) ? 131071 : 524287);
    if (isSetSibling_ages())
      hashCode = hashCode * 8191 + sibling_ages.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(FortuneRequest other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetOptional_car()).compareTo(other.isSetOptional_car());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOptional_car()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.optional_car, other.optional_car);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetVehicle_description()).compareTo(other.isSetVehicle_description());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVehicle_description()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.vehicle_description, other.vehicle_description);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFinger_lengths()).compareTo(other.isSetFinger_lengths());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFinger_lengths()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.finger_lengths, other.finger_lengths);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSibling_ages()).compareTo(other.isSetSibling_ages());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSibling_ages()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sibling_ages, other.sibling_ages);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("FortuneRequest(");
    boolean first = true;

    sb.append("name:");
    if (this.name == null) {
      sb.append("null");
    } else {
      sb.append(this.name);
    }
    first = false;
    if (isSetOptional_car()) {
      if (!first) sb.append(", ");
      sb.append("optional_car:");
      if (this.optional_car == null) {
        sb.append("null");
      } else {
        sb.append(this.optional_car);
      }
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("vehicle_description:");
    if (this.vehicle_description == null) {
      sb.append("null");
    } else {
      sb.append(this.vehicle_description);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("finger_lengths:");
    if (this.finger_lengths == null) {
      sb.append("null");
    } else {
      sb.append(this.finger_lengths);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("sibling_ages:");
    if (this.sibling_ages == null) {
      sb.append("null");
    } else {
      sb.append(this.sibling_ages);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (name == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'name' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class FortuneRequestStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public FortuneRequestStandardScheme getScheme() {
      return new FortuneRequestStandardScheme();
    }
  }

  private static class FortuneRequestStandardScheme extends org.apache.thrift.scheme.StandardScheme<FortuneRequest> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, FortuneRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // OPTIONAL_CAR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.optional_car = new Car();
              struct.optional_car.read(iprot);
              struct.setOptional_carIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // VEHICLE_DESCRIPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.vehicle_description = new VehicleDescription();
              struct.vehicle_description.read(iprot);
              struct.setVehicle_descriptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // FINGER_LENGTHS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.finger_lengths = new java.util.ArrayList<java.lang.Integer>(_list0.size);
                int _elem1;
                for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                {
                  _elem1 = iprot.readI32();
                  struct.finger_lengths.add(_elem1);
                }
                iprot.readListEnd();
              }
              struct.setFinger_lengthsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // SIBLING_AGES
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map3 = iprot.readMapBegin();
                struct.sibling_ages = new java.util.HashMap<java.lang.String,java.lang.Integer>(2*_map3.size);
                @org.apache.thrift.annotation.Nullable java.lang.String _key4;
                int _val5;
                for (int _i6 = 0; _i6 < _map3.size; ++_i6)
                {
                  _key4 = iprot.readString();
                  _val5 = iprot.readI32();
                  struct.sibling_ages.put(_key4, _val5);
                }
                iprot.readMapEnd();
              }
              struct.setSibling_agesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, FortuneRequest struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.name != null) {
        oprot.writeFieldBegin(NAME_FIELD_DESC);
        oprot.writeString(struct.name);
        oprot.writeFieldEnd();
      }
      if (struct.optional_car != null) {
        if (struct.isSetOptional_car()) {
          oprot.writeFieldBegin(OPTIONAL_CAR_FIELD_DESC);
          struct.optional_car.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.vehicle_description != null) {
        oprot.writeFieldBegin(VEHICLE_DESCRIPTION_FIELD_DESC);
        struct.vehicle_description.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.finger_lengths != null) {
        oprot.writeFieldBegin(FINGER_LENGTHS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, struct.finger_lengths.size()));
          for (int _iter7 : struct.finger_lengths)
          {
            oprot.writeI32(_iter7);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.sibling_ages != null) {
        oprot.writeFieldBegin(SIBLING_AGES_FIELD_DESC);
        {
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.I32, struct.sibling_ages.size()));
          for (java.util.Map.Entry<java.lang.String, java.lang.Integer> _iter8 : struct.sibling_ages.entrySet())
          {
            oprot.writeString(_iter8.getKey());
            oprot.writeI32(_iter8.getValue());
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class FortuneRequestTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public FortuneRequestTupleScheme getScheme() {
      return new FortuneRequestTupleScheme();
    }
  }

  private static class FortuneRequestTupleScheme extends org.apache.thrift.scheme.TupleScheme<FortuneRequest> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, FortuneRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeString(struct.name);
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetOptional_car()) {
        optionals.set(0);
      }
      if (struct.isSetVehicle_description()) {
        optionals.set(1);
      }
      if (struct.isSetFinger_lengths()) {
        optionals.set(2);
      }
      if (struct.isSetSibling_ages()) {
        optionals.set(3);
      }
      oprot.writeBitSet(optionals, 4);
      if (struct.isSetOptional_car()) {
        struct.optional_car.write(oprot);
      }
      if (struct.isSetVehicle_description()) {
        struct.vehicle_description.write(oprot);
      }
      if (struct.isSetFinger_lengths()) {
        {
          oprot.writeI32(struct.finger_lengths.size());
          for (int _iter9 : struct.finger_lengths)
          {
            oprot.writeI32(_iter9);
          }
        }
      }
      if (struct.isSetSibling_ages()) {
        {
          oprot.writeI32(struct.sibling_ages.size());
          for (java.util.Map.Entry<java.lang.String, java.lang.Integer> _iter10 : struct.sibling_ages.entrySet())
          {
            oprot.writeString(_iter10.getKey());
            oprot.writeI32(_iter10.getValue());
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, FortuneRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.name = iprot.readString();
      struct.setNameIsSet(true);
      java.util.BitSet incoming = iprot.readBitSet(4);
      if (incoming.get(0)) {
        struct.optional_car = new Car();
        struct.optional_car.read(iprot);
        struct.setOptional_carIsSet(true);
      }
      if (incoming.get(1)) {
        struct.vehicle_description = new VehicleDescription();
        struct.vehicle_description.read(iprot);
        struct.setVehicle_descriptionIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TList _list11 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.finger_lengths = new java.util.ArrayList<java.lang.Integer>(_list11.size);
          int _elem12;
          for (int _i13 = 0; _i13 < _list11.size; ++_i13)
          {
            _elem12 = iprot.readI32();
            struct.finger_lengths.add(_elem12);
          }
        }
        struct.setFinger_lengthsIsSet(true);
      }
      if (incoming.get(3)) {
        {
          org.apache.thrift.protocol.TMap _map14 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.sibling_ages = new java.util.HashMap<java.lang.String,java.lang.Integer>(2*_map14.size);
          @org.apache.thrift.annotation.Nullable java.lang.String _key15;
          int _val16;
          for (int _i17 = 0; _i17 < _map14.size; ++_i17)
          {
            _key15 = iprot.readString();
            _val16 = iprot.readI32();
            struct.sibling_ages.put(_key15, _val16);
          }
        }
        struct.setSibling_agesIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

